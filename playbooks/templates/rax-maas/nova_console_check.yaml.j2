{% set label = "nova_console_check" %}
{% set check_name = label+'--'+inventory_hostname %}
{% if nova_console_type == 'spice' %}
{% set console_service_name = 'nova_spice' %}
{% set nova_console_base_url = 'spice_auto.html' %}
{% elif nova_console_type == 'novnc' %}
{% set console_service_name = 'nova_novnc' %}
{% set nova_console_base_url = 'vnc_auto.html' %}
{% endif %}
type        : agent.plugin
label       : "{{ check_name }}"
period      : "{{ maas_check_period_override[label] | default(maas_check_period) }}"
timeout     : "{{ maas_check_timeout_override[label] | default(maas_check_timeout) }}"
disabled    : "{{ (check_name | match(maas_excluded_checks_regex)) | ternary('true', 'false') }}"
details     :
    file    : run_plugin_in_venv.sh
    args    : ["{{ maas_plugin_dir }}/service_api_local_check.py", "{{ console_service_name }}", "{{ ansible_host }}", "{{ nova_console_port }}", "--path", "{{ nova_console_base_url }}"]
alarms      :
    nova_{{ console_service_name }}_api_local_status :
        label                   : nova_{{ console_service_name}}_api_local_status--{{ inventory_hostname }}
        notification_plan_id    : "{{ maas_notification_plan_override[label] | default(maas_notification_plan) }}"
        disabled                : {{ (('nova_{{ console_service_name}}_api_local_status--'+inventory_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["{{ console_service_name }}_api_local_status"] != 1) {
                return new AlarmStatus(CRITICAL, "nova {{ nova_console_type }} console down");
            }
