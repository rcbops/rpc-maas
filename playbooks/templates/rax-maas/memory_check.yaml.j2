{% set label = "memory_check" %}
{% set check_name = label+'--'+inventory_hostname %}
type              : agent.memory
label             : "{{ check_name }}"
period            : "{{ maas_check_period_override[label] | default(maas_check_period) }}"
timeout           : "{{ maas_check_timeout_override[label] | default(maas_check_timeout) }}"
disabled          : "{{ (check_name | match(maas_excluded_checks_regex)) | ternary('true', 'false') }}"
alarms            :
    memory_used                 :
        label                   : memory_check--{{ inventory_hostname|quote }}
        notification_plan_id    : "{{ maas_notification_plan_override[label] | default(maas_notification_plan) }}"
{% set is_shared_infra_host = inventory_hostname in (groups['shared-infra_hosts'] | default([])) %}
{% set full_alarm_name = ('memory_check--' + inventory_hostname | quote) %}
{% if is_shared_infra_host and full_alarm_name | match(maas_excluded_alarms_regex) %}
        disabled                : true
{% else %}
        disabled                : false
{% endif %}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (percentage(metric["actual_used"], metric["total"]) >= {{ maas_memory_used_percentage_critical_threshold }}) {
                return new AlarmStatus(CRITICAL, "Memory is {{ maas_memory_used_percentage_critical_threshold }}%+ in use.");
            }
            if (percentage(metric["actual_used"], metric["total"]) >= {{ maas_memory_used_percentage_warning_threshold }}) {
                return new AlarmStatus(WARNING, "Memory is {{ maas_memory_used_percentage_warning_threshold }}%+ in use.");
            }
