{% set label = "ceph_osd_stats" %}
{% set check_name = label+'--'+inventory_hostname %}
{% set ceph_args = [maas_plugin_dir + "/ceph_monitoring.py", "--name", "client.raxmon", "--keyring", "/etc/ceph/ceph.client.raxmon.keyring"] %}
{% if physical_host is defined and physical_host != ansible_host %}
{%   set _ = ceph_args.extend(["--container-name", container_name]) %}
{% endif %}
{% set _ = ceph_args.extend(["osd", "--osd_ids"]) %}
{% set _ = ceph_args.append(ceph_osd_list | default([]) | join(' ')) %}
{% set _ceph_args = ceph_args | to_yaml(width=1000) %}
{% set ceph_args = _ceph_args %}

type        : agent.plugin
label       : "{{ check_name }}"
period      : "{{ maas_check_period_override[label] | default(maas_check_period) }}"
timeout     : "{{ maas_check_timeout_override[label] | default(maas_check_timeout) }}"
disabled    : "{{ (check_name | match(maas_excluded_checks_regex)) | ternary('true', 'false') }}"
details     :
    file    : run_plugin_in_venv.sh
    args    : {{ ceph_args }}
    timeout : {{ (maas_check_timeout_override[label] | default(maas_check_timeout) * 1000) }}
alarms      :
{% for osd_id in ceph_osd_list %}
    ceph_warn_osd.{{ osd_id }} :
        label                   : ceph_warn_osd.{{ osd_id }}--{{ inventory_hostname }}
        notification_plan_id    : "{{ maas_notification_plan_override[label] | default(maas_notification_plan) }}"
        disabled                : {{ (('ceph_warn_osd.'+osd_id|string+'--'+inventory_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["osd.{{ osd_id }}_up"] == 0) {
                return new AlarmStatus(CRITICAL, "Ceph osd error.");
            }
    osd_percent_used.{{ osd_id }} :
        label                   : osd_percent_used.{{ osd_id }}--{{ inventory_hostname }}
        notification_plan_id    : "{{ maas_notification_plan_override[label] | default(maas_notification_plan) }}"
        disabled                : {{ (('osd_percent_used.'+osd_id|string+'--'+inventory_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["osd.{{ osd_id }}_percent_used"] >= 85) {
                return new AlarmStatus(CRITICAL, "Ceph osd is >= 85% full.");
            }
            if (metric["osd.{{ osd_id }}_percent_used"] >= 75) {
                return new AlarmStatus(WARNING, "Ceph osd is >= 75% full.");
            }
{% endfor %}
