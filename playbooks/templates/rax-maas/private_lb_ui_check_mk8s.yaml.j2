{% from "templates/common/macros.jinja" import get_metadata with context %}
{% set label = "private_lb_ui_check_mk8s" %}
{% set check_name = label %}
type              : remote.http
label             : "{{ check_name }}"
period            : "{{ maas_check_period_override[label] | default(maas_check_period) }}"
timeout           : "{{ maas_check_timeout_override[label] | default(maas_check_timeout) }}"
disabled          : "{{ (inventory_hostname != groups['mk8s_ui_all'][0] or check_name is match(maas_excluded_checks_regex)) | ternary('true', 'false') }}"
target_resolver   : "IPv4"
target_hostname   : "{{ maas_external_ip_address }}"
details           :
    url           : "{{ maas_k8s_ui_scheme | default(maas_scheme)}}://{{ maas_external_hostname }}:{{ mk8s_ui_port_lb }}"
    method        : "HEAD"
monitoring_zones_poll:
  - "{{ maas_private_monitoring_zone }}"
{{ get_metadata(label).strip() }}
{# Add extra metadata options with two leading white spaces #}
alarms            :
    private_lb_ui_alarm_mk8s    :
        label               : private_lb_ui_alarm_mk8s
        notification_plan_id: "{{ maas_notification_plan_override[label] | default(maas_notification_plan) }}"
        disabled            : {{ ('private_lb_ui_alarm_mk8s' is match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria            : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric['code'] != '200') {
                return new AlarmStatus(CRITICAL, 'UI unavailable.');
            }
