{% set label = "nova_cloud_stats_check" %}
{% set check_name = label+'--'+inventory_hostname %}
type        : agent.plugin
label       : "{{ check_name }}"
period      : "{{ maas_check_period_override[label] | default(maas_check_period) }}"
timeout     : "{{ maas_check_timeout_override[label] | default(maas_check_timeout) }}"
disabled    : "{{ (check_name | match(maas_excluded_checks_regex)) | ternary('true', 'false') }}"
details     :
    file    : run_plugin_in_venv.sh
    args    : ["{{ maas_plugin_dir }}/nova_cloud_stats.py", "--cpu", "{{ maas_cloud_resource_cpu_allocation_ratio }}", "--mem", "{{ maas_cloud_resource_mem_allocation_ratio }}", "{{ ansible_host }}"]

alarms      :
    nova_cloud_memory_status :
        label                   : nova_cloud_memory_status--{{ inventory_hostname }}
        notification_plan_id    : "{{ maas_notification_plan_override[label] | default(maas_notification_plan) }}"
        disabled                : {{ (('nova_cloud_memory_status--'+inventory_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (percentage(metric["cloud_resource_used_memory"], metric["cloud_resource_total_memory"]) > {{ maas_cloud_resource_critical_memory }}) {
                return new AlarmStatus(CRITICAL, "Total cloud memory usage exceeds critical threshold of {{ maas_cloud_resource_critical_memory }}%");
            }
            if (percentage(metric["cloud_resource_used_memory"], metric["cloud_resource_total_memory"]) > {{ maas_cloud_resource_warning_memory }}) {
                return new AlarmStatus(WARNING, "Total cloud memory usage exceeds warning threshold of {{ maas_cloud_resource_warning_memory }}%");
            }
    nova_cloud_disk_status :
        label                   : nova_cloud_disk_status--{{ inventory_hostname }}
        notification_plan_id    : "{{ maas_notification_plan_override[label] | default(maas_notification_plan) }}"
        disabled                : {{ (('nova_cloud_disk_status--'+inventory_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (percentage(metric["cloud_resource_used_disk_space"], metric["cloud_resource_total_disk_space"]) > {{ maas_cloud_resource_critical_disk_space }}) {
                return new AlarmStatus(CRITICAL, "Total cloud disk_space usage exceeds critical threshold of {{ maas_cloud_resource_critical_disk_space }}%");
            }
            if (percentage(metric["cloud_resource_used_disk_space"], metric["cloud_resource_total_disk_space"]) > {{ maas_cloud_resource_warning_disk_space }}) {
                return new AlarmStatus(WARNING, "Total cloud disk_space usage exceeds warning threshold of {{ maas_cloud_resource_warning_disk_space }}%");
            }
    nova_cloud_vcpu_status :
        label                   : nova_cloud_vcpu_status--{{ inventory_hostname }}
        notification_plan_id    : "{{ maas_notification_plan_override[label] | default(maas_notification_plan) }}"
        disabled                : {{ (('nova_cloud_vcpu_status--'+inventory_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (percentage(metric["cloud_resource_used_vcpus"], metric["cloud_resource_total_vcpus"]) > {{ maas_cloud_resource_critical_vcpus }}) {
                return new AlarmStatus(CRITICAL, "Total cloud vcpus usage exceeds critical threshold of {{ maas_cloud_resource_critical_vcpus }}%");
            }
            if (percentage(metric["cloud_resource_used_vcpus"], metric["cloud_resource_total_vcpus"]) > {{ maas_cloud_resource_warning_vcpus }}) {
                return new AlarmStatus(WARNING, "Total cloud vcpus usage exceeds warning threshold of {{ maas_cloud_resource_warning_vcpus }}%");
            }
