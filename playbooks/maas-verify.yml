---
# Copyright 2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
- name: Verify MaaS
  hosts: hosts
  user: "{{ ansible_user | default('root') }}"
  gather_facts: true
  become: true
  pre_tasks:
    - name: Refresh local facts
      setup:
        filter: ansible_local
        gather_subset: "!all"

  tasks:
    - name: Ensure log directories
      file:
        path: "{{ workspace_logs }}"
        state: "directory"

    - name: Create tools dir
      file:
        path: "/opt/rpc-maas-tools"
        state: directory
        owner: "root"
        group: "root"
        mode: "0755"

    - name: Ensure working dir logs directory exists
      file:
        path: "{{ working_dir_logs }}"
        state: directory
        owner: "root"
        group: "root"
        mode: "0755"
      when:
        - ansible_local['maas']['general']['deploy_osp'] | bool

    - name: Create log link
      file:
        src: "{{ workspace_logs }}"
        dest: "{{ working_dir_logs }}"
        state: link
      when:
        - not (ansible_local['maas']['general']['deploy_osp'] | bool)
        - not (ansible_local['maas']['general']['maas_env_product'] == 'ceph')

    - name: Copy verification tool to host
      copy:
        src: "files/rax-maas/tools/{{ item }}"
        dest: "/opt/rpc-maas-tools/{{ item }}"
      with_items:
        - rpc-maas-tool.py
        - alarmparser.py

    - name: Include maas venv create
      include_tasks: common-tasks/maas-venv-create.yml

    - name: "Allow MAAS time to run checks before verifying they're created"
      pause:
        minutes: 5
      when:
        - maas_use_api | bool
        - maas_verify_wait | bool

    - name: Transpose maas_merged_excluded_checks from local facts
      set_fact:
        excludedchecks: "{{ ansible_local['maas']['general']['maas_merged_excluded_checks'] }}"

    - name: Run MaaS verify local
      command: "{{ maas_venv_bin }}/python /opt/rpc-maas-tools/rpc-maas-tool.py --logfile {{ workspace_logs }}/rpc-maas-logs.txt verify-local"
      become: true
      register: maas_verify
      changed_when: false
      until: maas_verify is success
      retries: "{{ maas_verify_retries }}"
      delay: "{{ maas_verify_delay }}"
      tags:
        - maas-verify-local

    - name: "Verify Checks & Alarms are registered"
      command: >
        {{ maas_venv_bin }}/python /opt/rpc-maas-tools/rpc-maas-tool.py --logfile {{ workspace_logs }}/rpc-maas-api-logs.txt verify-created
        --entity {{ maas_entity_name }}
        {% for ec in excludedchecks %} --excludedcheck "{{ ec }}" {% endfor %}
      become: true
      register: verify_maas
      changed_when: false
      until: verify_maas.rc == 0
      retries: "{{ maas_verify_retries }}"
      delay: "{{ maas_verify_delay }}"
      when:
        - maas_use_api | bool
        - maas_verify_registration | bool

    - name: "Verify Check & Alarm Status"
      command: >
        {{ maas_venv_bin }}/python /opt/rpc-maas-tools/rpc-maas-tool.py --logfile {{ workspace_logs }}/rpc-maas-api-logs.txt verify-status
        --entity {{ maas_entity_name }}
      become: true
      register: verify_status
      changed_when: false
      until: verify_status.rc == 0
      retries: "{{ maas_verify_retries }}"
      delay: "{{ maas_verify_delay }}"
      when:
        - maas_use_api | bool
        - maas_verify_status | bool

  vars:
    working_dir_logs: "{{ lookup('env', 'WORKING_DIR') | default('/tmp', true) }}/logs"
    workspace_logs: "{{ lookup('env', 'RE_HOOK_ARTIFACT_DIR') | default('/tmp', true) }}"

  vars_files:
    - vars/main.yml
    - vars/maas.yml
    - "vars/maas-{{ ansible_distribution | lower }}.yml"

  environment: "{{ deployment_environment_variables | default({}) }}"
