---
# Copyright 2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Added for compatibility (should be removed soon)
# ****************************************************
external_vip_address: "{{ maas_external_ip_address }}"
# ****************************************************
internal_vip_address: "{{ internal_lb_vip_address }}"
# ****************************************************

#
# nova_service_check_protocol: Protocol to use when authenticating for nova
#                              service checks. Valid values are "http" or
#                              "https".
# TODO Should this be moved to the openstack vars file?
nova_service_check_protocol: 'http'

#
# nova_service_check_port: Port used for nova service
nova_service_check_port: '8774'

#
# nova_metadata_api_port: Port for the nova metadata service
#
nova_metadata_api_port: '8775'

#
# nova_metadata_api_protocol: Protocol for nova metadata service
#
nova_metadata_api_protocol: 'http'

#
# rabbitmq_http_protocol: Protocol to use when authenticating for rabbitmq
#                         service checks. Valid values are "http" or
#                         "https".
# TODO Should this be moved to the openstack vars file?
rabbitmq_http_protocol: 'http'

#
# neutron_client_protocol: Protocol to use when authenticating for neutron
#                          service checks. Valid values are "http" or
#                          "https".
# TODO Should this be moved to the openstack vars file?
neutron_client_protocol: 'http'

#
# neutron_client_port: Port for the neutron API service
#
neutron_client_port: '9696'

#
# cinder_client_protocol: Protocol to use when authenticating for cinder
#                         service checks. Valid values are "http" or
#                         "https".
# TODO Should this be moved to the openstack vars file?
cinder_client_protocol: 'http'

#
# ceph_radosgw_protocol: Protocol to use for ceph radosgw checks. Valid values
#                        are "http" or "https".
#
ceph_radosgw_protocol: 'http'

#
# keystone_local_api_port: Port number for the local keystone API service
#
keystone_local_api_port: '5000'

#
# keystone_local_api_protocol: Protocol for the local keystone API
#
keystone_local_api_protocol: 'http'

# cinder_local_api_protocol: Protocol to use for cinder local API checks
#
cinder_local_api_protocol: 'http'

#
# cinder_local_api_port: Port number for the local cinder api service.
#
cinder_local_api_port: '8776'

#
# cinder api version
#
os_volume_api_version: '1'

# octavia_api_port: Port number for the octavia service
#
octavia_api_port: '9876'

#
# octavia_api_protocol: Protocol used to contact the octavia API service
#
octavia_api_protocol: 'http'

#
# glance_local_reg_api_port: Port number for the local glance registry api service
#
glance_local_reg_api_port: '9191'

#
# glance_local_reg_api_protocol: Protocol for the local glance registry API checks
#
glance_local_reg_api_protocol: 'http'

#
# glance_local_api_port: Port number for the local glance api service
#
glance_local_api_port: '9292'

#
# glance_local_api_protocol: Protocol for the local glance API checks
#
glance_local_api_protocol: 'http'

#
# glance api version
#
os_image_api_version: '1'

#
# heat_local_api_port: Port number for the local heat api service
#
heat_local_api_port: '8004'

#
# heat_local_api_protocol: Protocol for the local heat API checks
#
heat_local_api_protocol: 'http'

# mk8s_auth_port: Port number for the mk8s ui service (internal)
mk8s_auth_port_lb: '8890'

# mk8s_auth_port: Port number for the mk8s auth service (local)
mk8s_auth_port: '8080'

#
# mk8s_auth_protocol: Protocol used to contact the mk8s auth service
#
mk8s_auth_protocol: 'http'

# mk8s_ui_port: Port number for the mk8s ui service (local)
#
mk8s_ui_port: '8080'

# mk8s_ui_port: Port number for the mk8s ui service (global)
#
mk8s_ui_port_lb: '8891'

#
# mk8s_ui_protocol: Protocol used to contact the mk8s ui service
#
mk8s_ui_protocol: 'http'

# mk8s_etp_port: Port number for the mk8s etp service
#
mk8s_etp_port: '8889'

#
# mk8s_etp_protocol: Protocol used to contact the mk8s etp service
#
mk8s_etp_protocol: 'http'

# mk8s_etg_port: Port number for the mk8s etg service
#
mk8s_etg_port: '8888'

#
# mk8s_etg_protocol: Protocol used to contact the mk8s etg service
#
mk8s_etg_protocol: 'http'

#
# ironic_local_api_port: Port number for the local ironic api service
#
ironic_local_api_port: '6385'

#
# ironic_local_api_protocol: Protocol for the local ironic API checks
#
ironic_local_api_protocol: 'http'

#
# horizon service
#
horizon_service_protocol: 'https'
horizon_service_port: '443'

#
# private_ping_check_count: Number of times to try ping check in private
#                           network monitoring case. Must be integer
#                           1-15 inclusive.
private_ping_check_count: 6

#
# private_ssh_port: The port number to use for SSH connections.
private_ssh_port: 22

#
# Set the process names for rsyslog
#
rsyslogd_process_names:
  - rsyslogd

#
# This should mirror this var in your ceph-ansible deployment.
#
radosgw_civetweb_port: "8080"

#
# Designate template options
#
maas_designate_service_proto: "{{ designate_service_proto | default('http') }}"
maas_designate_service_port: "{{ designate_service_port | default('9001') }}"


#
# Variables required to populate clouds.yaml
#

## Endpoint types
openrc_clouds_yml_interface: internal

## Default credentials
openrc_os_username: admin
openrc_os_tenant_name: admin
openrc_os_auth_url: "{{ keystone_service_internalurl }}"
openrc_region_name: "{{ keystone_service_region | default('RegionOne') }}"

## Create clouds.yml file
openrc_os_domain_name: Default
openrc_openstack_client_config_dir_dest: "{{ ansible_env.HOME }}/.config/openstack"
openrc_openstack_client_config_dir_owner: "{{ ansible_user_id }}"
openrc_openstack_client_config_dir_group: "{{ ansible_user_id }}"
openrc_openstack_client_config_dir_mode: "0700"
openrc_clouds_yml_file_dest: "{{ openrc_openstack_client_config_dir_dest }}/clouds.yaml"
openrc_clouds_yml_file_owner: "{{ ansible_user_id }}"
openrc_clouds_yml_file_group: "{{ ansible_user_id }}"
openrc_clouds_yml_file_mode: "0600"

# (NOTE:tonytan4ever) rpcr-dynamic inventory will dynamically determine
# if deploy_osp should be true or not, so we make main agnostic