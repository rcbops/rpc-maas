---
# Copyright 2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# maas_*_scheme: Override the scheme (http/https) for an individual service.
#
# maas_cinder_scheme: https
# maas_glance_scheme: https
# maas_keystone_scheme: https
# maas_neutron_scheme: https
# maas_nova_scheme: https
maas_horizon_scheme: https
# maas_heat_api_scheme: https
# maas_heat_cfn_scheme: https
# maas_heat_cloudwatch_scheme: https
# maas_ironic_api_scheme: https
# maas_maas_swift_proxy_scheme: https
# maas_octavia_scheme: https
# maas_designate_scheme: https

#
# The Cinder backup monitor can be turned on or off based on provided config.
#  By default this will be enabeled should hosts be setup and configured for
#  the service. Set this to "false" to disable it regardless of the detected
#  config.
#
maas_monitor_cinder_backup: "{{ ansible_local['maas']['general']['maas_monitor_cinder_backup'] | default(false) }}"
maas_cinder_volumes_vg_warning_threshold: 80.0
maas_cinder_volumes_vg_critical_threshold: 90.0

#
# Nova cloud level resource thresholds
#
maas_cloud_resource_warning_memory: 80.0
maas_cloud_resource_critical_memory: 90.0
maas_cloud_resource_warning_vcpus: 80.0
maas_cloud_resource_critical_vcpus: 90.0
maas_cloud_resource_warning_disk_space: 80.0
maas_cloud_resource_critical_disk_space: 90.0
maas_cloud_resource_cpu_allocation_ratio: 2.0
maas_cloud_resource_mem_allocation_ratio: 1.0

#
# Bare-metal/Ironic capacity thresholds
#
maas_capacity_percent_warning_threshold: 20.0
maas_capacity_percent_critical_threshold: 10.0

#
# Default horizon site name
#
maas_horizon_site_name: "openstack"

#
# Swift object access check
#
maas_swift_accesscheck_enabled: true
maas_swift_accesscheck_container: "rax_maas_accesscheck"
maas_swift_accesscheck_user_name: "rax_maas_accesscheck"
maas_swift_operator_role: "rax_maas_swiftoperator"
maas_swift_service_project_name: "rax_maas_service"

#
# Instruct the swift service checks to be ldap aware.
#
maas_swift_service_in_ldap: false

#
# Swift multi-region proxy nodes overrides (for swift-recon checks)
#
maas_swift_multi_region_proxy_nodes: []

#
# Swift MaaS thresholds
#
maas_swift_object_quarantine_failed_percentage_threshold: 5.0
maas_swift_object_quarantine_average_threshold: 25.0
maas_swift_object_replication_failure_percentage_threshold: 5.0
maas_swift_object_replication_growth_rate_threshold: 20.0
maas_swift_object_replication_avg_time_threshold: 50.0
maas_swift_account_quarantine_failed_percentage_threshold: 5.0
maas_swift_account_quarantine_average_threshold: 25.0
maas_swift_account_replication_failure_percentage_threshold: 5.0
maas_swift_account_replication_growth_rate_threshold: 10.0
maas_swift_account_replication_avg_time_threshold: 50.0
maas_swift_container_quarantine_failed_percentage_threshold: 5.0
maas_swift_container_quarantine_average_threshold: 25.0
maas_swift_container_replication_failure_percentage_threshold: 5.0
maas_swift_container_replication_growth_rate_threshold: 10.0
maas_swift_container_replication_avg_time_threshold: 300.0
maas_swift_async_pending_failure_percentage_threshold: 5.0
maas_swift_async_pending_average_threshold: 1000.0

maas_swift_object_process_names:
  - swift-object-server
  - swift-object-replicator
  - swift-object-updater
  - swift-object-auditor
  - swift-object-expirer

maas_swift_account_process_names:
  - swift-account-server
  - swift-account-replicator
  - swift-account-reaper
  - swift-account-auditor

maas_swift_container_process_names:
  - swift-container-server
  - swift-container-replicator
  - swift-container-updater
  - swift-container-auditor

# the release of OpenStack Swift that has been deployed
swift_release: "{{ openstack_release | default('master') }}"
swift_recon_path: "/openstack/venvs/swift-{{ swift_release }}/bin"

# Set the nova console type and port
maas_nova_console_type: "{{ ansible_local['maas']['general']['maas_nova_console_type'] | default(nova_console_type) | default('novnc') }}"
maas_nova_console_ports:
  novnc: 6080
  spice: 6082

maas_nova_console_port: "{{ maas_nova_console_ports[maas_nova_console_type] }}"

octavia_process_names:
  - uwsgi
  - octavia-worker
  - octavia-health-manager
  - octavia-housekeeping

octavia_process_names_sanitized:
  - uwsgi
  - octavia-workerlog
  - octavia-health-manager
  - octavia-housekeeping

octavia_quota_names:
  - octavia_cores_quota_usage
  - octavia_instances_quota_usage
  - octavia_ram_quota_usage
  - octavia_server_group_quota_usage
  - octavia_volume_gb_quota_usage
  - octavia_num_volume_quota_usage

designate_process_names:
  - designate-sink
  - designate-worker
  - designate-central
  - designate-producer
  - designate-api
  - designate-mdns

#
#  Performance monitoring has the potential to negatively impact performance
#  and availability for an environment's primary users.  Careful consideration
#  and tuning is required before enabling maas_rally.  The maas_rally playbook
#  will bail out unless this is set to true.
#
maas_rally_enabled: false

#
#  The node from which checks will run.  The maas_rally plugin will be installed
#  on all hosts in "shared-infra_hosts" machines, but performance checks (each of
#  which consumes resources) should only execute from a single node to avoid
#  uncoordinated resource consumption.  The best practice is to override this
#  with a single hostname (e.g. infra01) in user vars.  Then, if the primary
#  node fails maas_rally_primary_node can be updated to resume monitoring from
#  another node.
#
maas_rally_primary_node: "{{ groups['shared-infra_hosts'][0] }}"

#
#  The maas_rally_check_overrides dictionary is the primary configuration
#  mechanism for maas_rally scenarios.  Each first-level key represents a
#  scenario, and corresponds to a rally task definition file in
#  `playbooks/files/rax-maas/rally/tasks/`.  Look in that directory or in the
#  maas_rally_check_defaults variable to discover available scenarios.
#
#  The per-check (second-level keys) variables are described below.  At a
#  minimum, deployers should select appropriate values for `times`,
#  `poll_interval`, `warn_threshold`, and `crit_threshold` for each enabled
#  scenario based on the characteristics of the environment being monitored.
#  Undefined variables are inherited from `maas_rally_check_default_template`
#  and `maas_rally_check_defaults` in that order.
#
#  Per-check (second-level) keys:
#
#    - enabled: Boolean indicating whether the check should be deployed.  Each
#      check must explicitly be enabled.
#      Default: false
#
#    - times: Total number of times a rally task will be run per invocation of
#      the plugin.
#      Default: 1
#
#    - concurrency: Number of rally tasks that will run in parallel. In most
#      cases, where the goal is to measure performance while impacting it
#      minimally, default value of 1 should be used.
#      Default: 1
#
#    - poll_interval: Polling interval in seconds.
#      Default: 1800 (30 minutes)
#
#    - warn_threshold: A warning alarm is generated when the 95%ile metric
#      exceeds this threshold (in seconds).
#      Default: 300 (5 minutes)
#
#    - crit_threshold: An SLA breach alarm is generated with the 95%ile metric
#      exceeds this threshold (in seconds).
#      Default: 600 (10 minutes)
#
#    - alarm_consecutive_count: The number of failed polls that trigger an
#      alarm.  Defaults to 2 to allow for running the check locally for
#      diagnostic purposes and to avoid alerting during a MaaS agent restart.
#      Either of those events can lock the maas_rally scenario and cause a
#      single-poll failure.
#      Default: 2
#
#    - duration_threshold: The percentage of the polling interval used to warn
#      about potential polling overruns. Example: If a check is configured to
#      with a 300 second (5 minute) polling interface and this threshold is set
#      at 75%, then we will receive an alert if the performance check takes
#      more than 225 seconds (3 minutes, 45 seconds) to complete.
#      Default: 75 (percent)
#
#    - project: The keystone project the scenario runs in.  The playbook will
#      create this project if it does not exist.
#      Default: rally_<scenario name>
#
#    - user_name: The keystone user that the scenario runs as. The playbook will
#      create this user if it does not exist.
#      Default: rally_<scenario name>
#
#    - user_password: The password for the keystone user the scenario runs as.
#      Default: {{ maas_rally_users_password }}
#
#    - quota_factor: The per_iter_quota values are multiplied by this value
#      to determine how many concurrent instances of a scenario can run without
#      exceeding quotas.  This is primarily to provide enough buffer in the
#      quotas to run a new scenario while a failed scenario is being cleaned
#      up.
#      Default: {{ maas_rally_default_quota_factor }}
#
#    - delayed_by_lock_alarm_threshold: An alarm will be generated after this
#      many consecutive polls were delayed because a scenario lock could not be
#      acquired.
#      Default: {{ maas_rally_default_delayed_by_lock_alarm_threshold }}
#
#    - resource_cleanup_alarm_threshold: An alarm iwll be generated after this
#      many consecutive polls were required to clean up scenario resources.
#      Default: {{ maas_rally_default_resource_cleanup_alarm_threshold }}
#
#
#  Example:
#
#    maas_rally_check_overrides:
#      cinder:
#        enabled: true
#        poll_interval: 300
#        times: 2
#        warn_threshold: 75
#        crit_threshold: 95
#      glance:
#        enabled: true
#        poll_interval: 120
#        times: 2
#        warn_threshold: 25
#        crit_threshold: 45
#      keystone:
#        enabled: true
#        poll_interval: 120
#        times: 10
#        warn_threshold: 1.65
#        crit_threshold: 2.5
#      neutron_ports:
#        enabled: true
#        poll_interval: 120
#        times: 2
#        warn_threshold: 20
#        crit_threshold: 30
#      neutron_secgroups:
#        enabled: true
#        poll_interval: 120
#        times: 2
#        warn_threshold: 24
#        crit_threshold: 40
#      nova:
#        enabled: true
#        poll_interval: 300
#        times: 2
#        warn_threshold: 35
#        crit_threshold: 50
#      nova_cinder:
#        enabled: true
#        poll_interval: 200
#        times: 2
#        warn_threshold: 70
#        crit_threshold: 90
#      swift:
#        enabled: true
#        poll_interval: 60
#        warn_threshold: 2.5
#        crit_threshold: 5
#        user_name: swift_monitor
#        user_password: swiftsecrete
#        extra_user_roles:
#          - "swiftoperator"
maas_rally_check_overrides: {}

#
#  Galera username for rally.  N.B.: maas_rally_galera_password must be set
#  in user secrets.
#
galera_root_user: root
maas_rally_galera_user: maas_rally

#
#  Name for galera database where Rally data will be stored
#
maas_rally_galera_database: maas_rally

#
#  Address for galera database where Rally data will be stored.
#
maas_rally_galera_address: "{{ hostvars[groups['galera_all'][0]]['ansible_host'] | default(hostvars[groups['galera_all'][0]]['container_address']) }}"

#
#  How rally deployments communicate with OpenStack endpoints.
#
maas_rally_scheme:  "{{ maas_scheme | default('http')}}"
maas_rally_auth_url: "{{ maas_rally_scheme }}://{{ internal_vip_address }}:5000/v3/"
maas_rally_region_name: "{{ keystone_service_region | default('RegionOne') }}"
maas_rally_endpoint_type: "internal"

#
# Admin user variables
#
maas_rally_admin_user_name: "{{ keystone_admin_user_name | default('admin') }}"
maas_rally_admin_project_name: "{{ keystone_admin_tenant_name | default('admin') }}"
maas_rally_admin_password: "{{ keystone_auth_admin_password }}"
maas_rally_admin_domain_name: Default

#
#  NOTE: Variables beyond this point probably do not need to be overridden for
#  most use cases (e.g. unless you are adding new scenarios or there is
#  something non-standard in your environment
#

#
# Name of the virtual env to deploy maas_rally into
#
maas_rally_venv: "/openstack/venvs/maas-rally-{{ maas_release }}"
maas_rally_venv_bin: "{{ maas_rally_venv }}/bin"

#
# Repo and commit/tag/branch for rally
#
maas_rally_git_repo: "https://github.com/openstack/rally"
maas_rally_git_version: "stable/0.9"

#
# Set the pip package state, defaults to present
#
maas_pip_rally_package_state: present

#
#  Default values for performance checks.  They are intentionally conservative
#  here to reduce the risk of negatively impacting a production environment by
#  enabling checks without tuning their configurations.  The expectation is
#  that these are overridden on a per-check basis, using environment- specific
#  values, in the maas_rally_check_overrides dictionary.
#
#  See the documentation block for maas_rally_check_overrides for information
#  about each variable.
#
maas_rally_default_times: 1
maas_rally_default_alarm_stat: mean
maas_rally_default_concurrency: 1
maas_rally_default_poll_interval: 1800
maas_rally_default_duration_threshold: 75
maas_rally_default_warn_threshold: 300
maas_rally_default_crit_threshold: 600
maas_rally_default_alarm_consecutive_count: 3
maas_rally_default_quota_factor: 3
maas_rally_default_delayed_by_lock_alarm_threshold: 3
maas_rally_default_resource_cleanup_alarm_threshold: 3

#
#  This dictionary is a template containing default values for all checks. In
#  most cases, deployers should make changes in maas_rally_check_overrides
#  rather than here.
#
#  See the documentation block for maas_rally_check_overrides for information
#  about each variable.
#
maas_rally_check_default_template:
  enabled: false
  alarm_stat: "{{ maas_rally_default_alarm_stat }}"
  warn_threshold: "{{ maas_rally_default_warn_threshold }}"
  crit_threshold: "{{ maas_rally_default_crit_threshold }}"
  poll_interval: "{{ maas_rally_default_poll_interval }}"
  duration_threshold: "{{ maas_rally_default_duration_threshold }}"
  user_password: "{{ maas_rally_users_password }}"
  alarm_consecutive_count: "{{ maas_rally_default_alarm_consecutive_count }}"
  delayed_by_lock_alarm_threshold: "{{ maas_rally_default_delayed_by_lock_alarm_threshold }}"
  resource_cleanup_alarm_threshold: "{{ maas_rally_default_resource_cleanup_alarm_threshold }}"
  extra_user_roles: []
  task_args:
    times: "{{ maas_rally_default_times }}"
    concurrency: "{{ maas_rally_default_concurrency }}"
  primary_resources: []
  quota_factor: "{{ maas_rally_default_quota_factor }}"
  per_iter_quotas:    # Resources required per iteration of the scenario. These
    instances: 0      # values are multipled by the scenario's concurrency.
    cores: 0
    ram: 0
    fixed-ips: 0
    floating-ips: 0
    ports: 0
    snapshots: 0
    volumes: 0
    gigabytes: 0

#
#  Defaults for each check.  These values are merged with
#  maas_rally_check_default_template for each check, with these values taking
#  precedence. In most cases, deployers should make changes in
#  maas_rally_check_overrides rather than here.
#
maas_rally_check_defaults:
  neutron_secgroups:
    user_name: rally_neutron_secgroups
    project: rally_neutron_secgroups
    primary_resources:
      - secgroup
  glance:
    user_name: rally_glance
    project: rally_glance
    primary_resources:
      - image
  keystone:
    user_name: rally_keystone
    project: rally_keystone
  swift:
    user_name: rally_swift
    project: rally_swift
  cinder:
    user_name: rally_cinder
    project: rally_cinder
    per_iter_quotas:
      instances: 1
      cores: 1
      ram: 256
      fixed-ips: 1
      ports: 4
      volumes: 2       # Double because rally doesn't seem to wait for cinder
      gigabytes: 2     # volumes to be scrubbed.
    primary_resources:
      - compute
      - volume
  neutron_ports:
    user_name: rally_neutron_ports
    project: rally_neutron_ports
    per_iter_quotas:
      ports: 1
    primary_resources:
      - port
  nova_cinder:
    user_name: rally_nova_cinder
    project: rally_nova_cinder
    per_iter_quotas:
      instances: 1
      cores: 1
      ram: 256
      fixed-ips: 1
      ports: 4
      volumes: 2       # Double because rally doesn't seem to wait for cinder
      gigabytes: 20    # volumes to be scrubbed.
    primary_resources:
      - compute
      - volume
  nova:
    user_name: rally_nova
    project: rally_nova
    per_iter_quotas:
      instances: 1
      cores: 1
      ram: 256
      fixed-ips: 1
      ports: 4
    primary_resources:
      - compute

#
#  Combine check defaults and overrides.  These are applied on top of the
#  template defined in maas_rally_check_default_template.
#
maas_rally_checks: "{{ maas_rally_check_defaults | combine(maas_rally_check_overrides, recursive=True) }}"

#
# Disables configuration validation
#
maas_rally_skip_config_validation: false

#
# Plugin logging configuration
#
maas_rally_plugin_log_file: /var/log/maas_rally.log
maas_rally_plugin_log_level: INFO

#
# InfluxDB configuration
#
# This section allows you to send the results of each poll to an arbitrary
# influxdb deployment.  This playbook does not handle the deployment of
# influxdb.
#
maas_rally_influxdb_enabled: false

# How to connect to the database
maas_rally_influxdb_host: localhost
maas_rally_influxdb_port: 8086
maas_rally_influxdb_user: maas_rally
maas_rally_influxdb_password: ''
maas_rally_influxdb_database: maas_rally

# This value is configured in the 'environment' tag for each data point to
# support report filtering multiple deployments using the same influxdb backend.
maas_rally_influxdb_environment_name: OpenStack

# The influxdb measurement name
maas_rally_influxdb_measurement_name: performance

# If you override this, be sure to include the environment tag
maas_rally_influxdb_tags:
  environment: "{{ maas_rally_influxdb_environment_name }}"
