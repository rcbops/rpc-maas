#!/usr/bin/env bash
# Copyright 2024, Rackspace Technology, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

source /opt/rpc-maas/scripts/maas-ansible.rc

function info {
    if [ "${ANSIBLE_NOCOLOR:-0}" -eq "1" ]; then
      echo -e "${@}"
    else
      echo -e "\e[0;35m${@}\e[0m"
    fi
}

# Figure out which binary was executed
RUN_CMD=$(basename ${0})

if [ -d "${OSA_ROOT}" -a -f "/usr/local/bin/openstack-ansible.rc" ]; then

  # Source the Ansible configuration.
  #. /usr/local/bin/openstack-ansible.rc
  export ANSIBLE_PYTHON_INTERPRETER="auto_legacy"

  # Load ARA into callback plugins if it is installed
  # Dynamically retrieve the location of the ARA callback so we are able to find
  # it on both py2 and py3
  ara_location=$(python -m ara.setup.callback_plugins 2>/dev/null || true)
  if [[ -n "$ara_location" ]]; then
    export ANSIBLE_CALLBACK_PLUGINS="${ANSIBLE_CALLBACK_PLUGINS}:${ara_location}"
  fi

  # Load userspace group vars
  if [[ -d ${OSA_CONFIG_DIR}/group_vars || -d ${OSA_CONFIG_DIR}/host_vars ]]; then
     if [[ ! -f ${OSA_CONFIG_DIR}/inventory.ini ]]; then
        echo '[all]' > ${OSA_CONFIG_DIR}/inventory.ini
     fi
  fi

  OSA_USER_RC="${OSA_USER_RC:-${OSA_CONFIG_DIR}/user.rc}"

  if [[ -f ${OSA_USER_RC} ]]; then
    source ${OSA_USER_RC}
  fi

  # Check whether there are any user configuration files
  if ls -1 ${OSA_CONFIG_DIR}/user_*.yml &> /dev/null; then

    # Discover the variable files.
    VAR1="$(for i in $(ls ${OSA_CONFIG_DIR}/user_*.yml); do echo -ne "-e @$i "; done)"

    # Provide information on the discovered variables.
    info "Variable files: \"${VAR1}\""

  fi

else

  # Assuming we are running outside OSA and pre-configure
  # the extra vars for OSP.
  VAR1="/home/stack/user_maas_variables.yml"

fi

. /root/ansible_venv/bin/activate

# Execute the Ansible playbook or command
if [ "${RUN_CMD}" == "maas-ansible" ] || [ "${RUN_CMD}" == "ansible-playbook" ]; then
  ansible-playbook ${VAR1} "${@}"
  PLAYBOOK_RC="$?"

  if [[ "${PLAYBOOK_RC}" -ne "0" ]]; then
    echo -e "\nEXIT NOTICE [Playbook execution failure] **************************************"
  else
    echo -e "\nEXIT NOTICE [Playbook execution success] **************************************"
  fi
  echo "==============================================================================="
  exit "${PLAYBOOK_RC}"

else

  ${RUN_CMD} ${VAR1} "${@}"
fi
